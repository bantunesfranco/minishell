echo "--------------------------------------------------------------------------"
echo -e "------------------------------${GREEN}STARTING TESTS${RESET}------------------------------"
echo "--------------------------------------------------------------------------"	
sleep 2
FILE="./testers_j/files/syntax_errors"
IFS=0
NL=$'\n'
KO=0
rm -rf error_args
	while read -r line
	do
		if [[ $line == "" ]]
		then
			continue
		else
			while [[ $line != "" ]]
			do
				TEST+="$line$NL"
				read -r line
			done
		fi
		echo -e -n "	Test for input :\n👉	$TEST"
		echo -n "$TEST" | ./minishell 2>err_mini >out_mini
		exit_mini=$?
		echo -n "$TEST" | bash 2>err_bash >out_bash
		exit_bash=$?
		test_output out_mini out_bash
		test_err err_mini err_bash
		# test_code $exit_mini $exit_bash
		TEST=""
	done < "$FILE"
if [[ $KO == 0 ]]
then
	echo -e "\n	👍${GREEN}TESTS PASSED${RESET}\n"
else
	echo -e "\n	🤮${RED}${KO} TESTS FAILED${RESET}\n"
fi
rm -f err_*
rm -f out_*



# readinput(){
# 	clear
# 	echo -e "\n${BOLD}What mode would you like to run :${RESET}"
# 	help_func
# 	echo -e ""
# 	while [[ $option != "exit" ]]
# 	do
# 		read option
# 		if [[ $option == "run" ]]
# 		then
# 			run_minishell
# 			help_func
# 		elif [[ $option == "sy" ]]
# 		then
# 			test_syntax
# 			help_func
# 		elif [[ $option == "le" ]]
# 		then
# 			test_lexer
# 			help_func
# 		elif [[ $option == "ex" ]]
# 		then
# 			test_expansion
# 			help_func
# 		elif [[ $option == "help" ]]
# 		then
# 			help_func
# 		elif [[ $option == "exit" ]]
# 		then
# 			break ;
# 		else
# 			echo -e "\nPlease input valid option"
# 			echo "help - for valid options"
# 		fi
# 		echo ""
# 	done
# }